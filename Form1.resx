<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAu
        DwAAAk1TRnQBSQFMAgEBBgEAAQgBAAEIAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEAAeIPGRC9IAAB4gEZ
        AQkEGQG7AhkBugUZBL0CGgK9ARoBmQa9IAAB4gEZAZABGQG7AZABGQKRARkBkQG7BBkEvQEHAW8BmQEW
        AXQBFgGTAZQEvSAAAeIBGQGQARkBkQG6ARkBCAGLAroBiwG5AYsCGQS9AQcBlAGTAW8BvQEWARcFvSAA
        AeIBGQGLAYEBtAIGAboBkAFxAW0CkQGQAhkEvQEaAQcBaQGOAeMBFgFvARYBdAEaAr0gAAHiARkBkQFs
        Aa4BkAFsAQYBcwJ0AY4B6gG0AhkEvQFLAXQCkwG2AeMBFwFGAW8BkwEaAb0gAAHiARkBuwGQAesBrgGQ
        AWwBdAJvAXQCkQIZA70BdAEXAZoBcwGOAZMB4wFpAUYBbwGTAQcBmiAAAeIBGQEJAZACbAEGAWwBdQF0
        AY4BdAHrAboCGQO9ARYBiAEcAe8BkwEcARYBdQHtAUsBaQGZAb0gAAHiARkBkAEGAfgBbgGLAWwBkQFt
        AW4BbwFtAboCGQO9AZMBaQFvARYBjgGwAm8BjgFGAW8BkwEaIAAB4gEZAZABBgKuAZABkQG6AZEBiwFs
        AZADGQO9ARoBRgFvAZMBRgNvAUYCbwGUAb0gAAHiARkBugEGAosCBgFrAbsDGQG7AQgBGQG9AvcBGgGU
        ARcBRgFvAZMC7QFuAWkBFgGTAQcgAAHiARkBkQEGAZABawGQAQYBkAEJAhkBCQG7AQkBGQEHAu0BkwEW
        AWkBbgEXARoBbwHsAWkBbwFpARoBvSAAAeICGQGLAZACBgGRBBkBtQG7AboBGQEcAZICHAG9AUwBFwFv
        AZkBGgEXAW8BkwIHAb0gAAHiAxkBuQGQAbsBCAQZAQgBuwGdARkBBwLrAQcBGgR0Ar0BlAKTARoBvSAA
        AeIMGQK7ARkBmQL4ARoMvSAAAeIPGQG9ARoOvSAAB/MB3gjzEPQE4gHhArsB4AHhARkBCQHhBOIQwwPz
        AvIBCAKNAa8B7QLyARoB8QLzBfQBmgIaARsBGgb0A+IBuwGdAZECnQG6ARwB7AG0AdsBGQLiAsMCoALD
        AX4DoAHDAZ8EwwPzAfEBjQGuAesB7QGuAXMBkgHXAewBtQG2AfIF9AGaAUwBbwF0AZMBmgEaBPQC4gG7
        AZ0BeALhAbkB7AGTAY4B7AG5AbsC4gLDAp8BwwJ+AcMBnwFYARoB5QF+A8MD8wG8Aa4BjQGuAo0CrgG2
        AW0BrgEIAfME9AHzAZMCUQF0AXUBmQGaAfMD9ALiAboBnQG6AeIBugG5AegB7QGOArsBugLiAsMBfgFY
        AaABeQF+AaABGgFSAn4BXAF+AsMC8wEaAY0BbQGRAfgBGgHtAW8BjgGNAWgB6gG2AfME9AKaAUwBbwF0
        AZkBkwIaA/QC4gGYAZcBCQEZAroB4gG7AbkBugEZAboBGQHiAsMBoAJYAX4BeQJ+AlEBUgFRAX4CwwLz
        AQgB6gFzAY0B7AEaAYIBkwGOAY0BkgGNAfEB8wX0AZkBUgF1A3QBlAEaAfQB8wH0AuIB4AG6AeEBGQF0
        Ae0BGQG7AbkBugHiAboBGQHiA8MBGgFYAlcBWAFSAm4BcwFuAVgBoAHDAvMBCAKNAewBkQEHAb0BjgGw
        AWgCkQGTAfME9AG9ApkBmgGZAVIBdAKaAfQBGgH0AuIBGQGdAZcBCQG6AbQBuQFzAZEBCQHiAbQC4gTD
        AVgBeANYAQMBUAHrAXMBeQLDAvMB8QGSAbYCjQHsAbUBkwG2AfEBtgGNAbUB8wP0AZoBkwF0AY4BcwJ0
        AZoB8wGaARoBmgH0A+IB4QG5Ap0B2wK5AbsB4gEZAboC4gTDAX4BeAF5AVgBNwFzAUwBUgF5AZkCwwLz
        AfIBGgEHARoBkgGTAe0BbgH4AdcB8gGTAb0B8wEaAZoBkwF0AfMB9AGaAW8BUwF1ARoC9AEbAvQE4gHh
        AcEBugGdAegBGQPiAboC4gPDAn4CWAF4AVgBeQF+AXgCWALDA/MB8gHxAd0BrgHsAbYBkgGuAbUBGgFo
        Ae0B8wGTAW8BdAFzAZoBmQF0AnUBGgP0AfcC9AHiAcEBCQPiAQkBugGXAboB4QLiAQgC4gPDAn4BWAF5
        AVgBfgPDAX4BWALDAfEB8wHwAQcB8wG9ArYBjQFLAW4BjQG2AYwB7AHyAZQB7QJ5AZoBFgF0AXUBeQKZ
        AvQB9wL0A+IBwQHhAbsBugLhAZ0BugHiAe8BtQLiAsMBoAFeAjcBWAFcAeUBoALDAaAB5QLDAQcB8gEH
        AbYBkgGCAq4BbQFLAXMBjQG2AbUBggEaAfQBmgGZAvQBmQF0AZkBdQF6AXUB8wHuAfgBBwEbA+IBugG5
        AboBkQG5AegBtAG5AeIBuwG1AuIB8AGZAfABfgFRAVgBNwF0AVgBoALDAaABGgLDAQcB6wH3Ad0BkgGT
        AY0BrgESAa4BggHsAbYB8gG2AfIE9AG9AXUBAwGOAXUBeQGaAfQB+AHtAe8BHAPiAbsBkQG5AXMBkQG5
        AZEBugHiAbsB7wEIAeIBmQEHAZkBwwFYAjcBVwFYAXkBXgFYAX4BoALDAe8B7QEHAQgBBwEIAfIBvAEa
        AfIB3gHzARoB8gLzA/QB8wGUAXUCmQKaAvQC+AHvARwD4gG6AZEB7QF0AfgCuQEZAeIBuwHtAuIBwwHq
        AZkCwwGgAVgBfgFeAX4B5QGgAZ8BGgLDAe8B+AEHDfMF9AG9ApoB8wP0AQcBHAHzAe4D4gEZAdsBuQEc
        AZEB6AEZAeIBGQK1AQgB4gGZAewBcwPDAX4BwwGgAX4BeQGfAaADwwHyAfAB8Q3zEPQF4gIZBeICCALi
        ARoBmQEbDcMBQgFNAT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD//8AAgAL
</value>
  </data>
</root>